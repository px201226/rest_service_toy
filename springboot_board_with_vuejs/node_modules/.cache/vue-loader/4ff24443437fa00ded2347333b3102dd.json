{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\views\\Home.vue","mtime":1609732380598},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBJbmZpbml0ZUxvYWRpbmcgZnJvbSAidnVlLWluZmluaXRlLWxvYWRpbmciOwppbXBvcnQgUG9zdFZpZXcgZnJvbSAiLi9Qb3N0Vmlldy52dWUiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCb2FyZExpc3QiLAogIGNvbXBvbmVudHM6IHsgUG9zdFZpZXcsIEluZmluaXRlTG9hZGluZyB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFnZTogMCwKICAgICAgcG9zdHM6IHRoaXMuJHN0b3JlLmdldHRlcnMuR0VUX1BPU1RfTElTVCwKICAgIH07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5xdWVyeUdldFBvc3RMaXN0KHRoaXMucGFnZSk7CiAgfSwKICBjb21wdXRlZDogewogICAgZ2V0UG9zdExpc3QoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLkdFVF9QT1NUX0xJU1Q7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgY2xpY2tJdGVtKGl0ZW0pIHsKICAgICAgY29uc29sZS5sb2coaXRlbS5pZCk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvcG9zdHMvIiArIGl0ZW0uaWQpOwogICAgfSwKICAgIHF1ZXJ5R2V0UG9zdExpc3QocGFnZSkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goIlFVRVJZX1BPU1RfTElTVCIsIHBhZ2UpOwogICAgfSwKICAgIHJvdXRlUG9zdEFydGljbGUoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvc2F2ZSIpOwogICAgfSwKICAgIGluZmluaXRlSGFuZGxlcigkc3RhdGUpIHsKICAgICAgY29uc29sZS5sb2coIi0tLS0tLS0tLS0tLSIpOwogICAgICBjb25zb2xlLmxvZyh0aGlzLnF1ZXJ5R2V0UG9zdExpc3QoKyt0aGlzLnBhZ2UpKTsKICAgICAgY29uc29sZS5sb2coInBhZ2U9IiArIHRoaXMucGFnZSk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["/* ## BoardList.vue 내용 */\n<template>\n  <v-container>\n    <v-layout class=\"mx-2 my-3\" row>\n      <v-flex xs1>\n        <v-icon lef large color=\"grey\">mdi-message-reply-text</v-icon>\n      </v-flex>\n      <v-flex xs11>\n        <v-btn block depressed outlined plain rounded text>\n          <span> 자신의 생각을 말해보세요! </span> {{ getPostList.length }}\n        </v-btn>\n      </v-flex>\n    </v-layout>\n    <div id=\"posts\">\n      <post-view\n        v-for=\"post in getPostList\"\n        :key=\"post.id\"\n        :nickName=\"post.nickName\"\n        :content=\"post.content\"\n      >\n      </post-view>\n    </div>\n    <infinite-loading @infinite=\"infiniteHandler\" spinner=\"waveDots\">\n      <div\n        slot=\"no-more\"\n        style=\"color: rgb(102, 102, 102); font-size: 14px; padding: 10px 0px;\"\n      >\n        목록의 끝입니다 :)\n      </div>\n    </infinite-loading>\n    <v-col class=\"text-right\">\n      <v-btn color=\"primary\" @click=\"routePostArticle\">게시글 작성</v-btn>\n    </v-col>\n  </v-container>\n</template>\n\n<script>\nimport InfiniteLoading from \"vue-infinite-loading\";\nimport PostView from \"./PostView.vue\";\n\nexport default {\n  name: \"BoardList\",\n  components: { PostView, InfiniteLoading },\n\n  data() {\n    return {\n      page: 0,\n      posts: this.$store.getters.GET_POST_LIST,\n    };\n  },\n  created() {\n    this.queryGetPostList(this.page);\n  },\n  computed: {\n    getPostList() {\n      return this.$store.getters.GET_POST_LIST;\n    },\n  },\n  methods: {\n    clickItem(item) {\n      console.log(item.id);\n      this.$router.push(\"/posts/\" + item.id);\n    },\n    queryGetPostList(page) {\n      return this.$store.dispatch(\"QUERY_POST_LIST\", page);\n    },\n    routePostArticle() {\n      this.$router.push(\"/save\");\n    },\n    infiniteHandler($state) {\n      console.log(\"------------\");\n      console.log(this.queryGetPostList(++this.page));\n      console.log(\"page=\" + this.page);\n    },\n  },\n};\n</script>\n"]}]}