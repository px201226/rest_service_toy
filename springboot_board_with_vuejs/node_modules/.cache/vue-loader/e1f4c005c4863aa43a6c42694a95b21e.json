{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\components\\Timer.vue?vue&type=style&index=0&id=1c1a6e76&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\components\\Timer.vue","mtime":1610431232986},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZGlnaXQgew0KICBmb250LXNpemU6IDc2cHg7DQogIGZvbnQtd2VpZ2h0OiAxMjA7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCg0KQGZvbnQtZmFjZSB7DQogIHNyYzogdXJsKCIuLi9hc3NldHMvN3NlZ21lbnQudHRmIik7DQogIGZvbnQtZmFtaWx5OiAiN3NlZ21lbnQiOw0KfQ0KDQouc2VnbWVudCB7DQogIGZvbnQtZmFtaWx5OiAiN3NlZ21lbnQiOw0KfQ0K"},{"version":3,"sources":["Timer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Timer.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"currentTime\">\r\n      <div class=\"align-center d-flex flex-column\">\r\n        <p class=\"white--text digit segment\">\r\n          {{ hours | formatTime }}:{{ minutes | formatTime }}:{{\r\n            seconds | formatTime\r\n          }}\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <div class=\"text-center\" v-if=\"!currentTime\">\r\n      Time's Up!\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    deadline: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n    speed: {\r\n      type: Number,\r\n      default: 1000,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      currentTime: Date.parse(this.deadline) - Date.parse(new Date()),\r\n    };\r\n  },\r\n  mounted() {\r\n    setTimeout(this.countdown, 1000);\r\n  },\r\n  computed: {\r\n    seconds() {\r\n      return Math.floor((this.currentTime / 1000) % 60);\r\n    },\r\n    minutes() {\r\n      return Math.floor((this.currentTime / 1000 / 60) % 60);\r\n    },\r\n    hours() {\r\n      return Math.floor(this.currentTime / (1000 * 60 * 60));\r\n    },\r\n  },\r\n  filters: {\r\n    formatTime(value) {\r\n      if (value < 10) {\r\n        return \"0\" + value;\r\n      }\r\n      return value;\r\n    },\r\n  },\r\n  methods: {\r\n    countdown() {\r\n      this.currentTime = Date.parse(this.deadline) - Date.parse(new Date());\r\n      if (this.currentTime > 0) {\r\n        setTimeout(this.countdown, this.speed);\r\n      } else {\r\n        this.currentTime = null;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.digit {\r\n  font-size: 76px;\r\n  font-weight: 120;\r\n  text-align: center;\r\n}\r\n\r\n@font-face {\r\n  src: url(\"../assets/7segment.ttf\");\r\n  font-family: \"7segment\";\r\n}\r\n\r\n.segment {\r\n  font-family: \"7segment\";\r\n}\r\n</style>\r\n"]}]}