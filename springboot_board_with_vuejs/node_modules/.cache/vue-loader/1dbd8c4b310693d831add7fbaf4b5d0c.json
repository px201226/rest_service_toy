{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\views\\Home.vue","mtime":1611050711890},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBJbmZpbml0ZUxvYWRpbmcgZnJvbSAidnVlLWluZmluaXRlLWxvYWRpbmciOwppbXBvcnQgUG9zdEl0ZW0gZnJvbSAiLi4vY29tcG9uZW50cy9Qb3N0SXRlbS52dWUiOwppbXBvcnQgUG9zdFdyaXRlIGZyb20gIi4vUG9zdFdyaXRlLnZ1ZSI7CmltcG9ydCBNb2RhbCBmcm9tICIuLi9jb21wb25lbnRzL01vZGFsLnZ1ZSI7CmltcG9ydCB7IHZhbGlkYXRlTG9naW4gfSBmcm9tICIuLi9hcGkvY29tbW9uX2FwaSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWUiLAogIGNvbXBvbmVudHM6IHsgUG9zdEl0ZW0sIEluZmluaXRlTG9hZGluZywgUG9zdFdyaXRlLCBNb2RhbCB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGFnZUFibGU6IHsgdG90YWxQYWdlczogMCB9LAogICAgICBwYWdlTnVtOiAwLAogICAgICBwb3N0czogIiIsCiAgICAgIHN0YXRlOiAiIiwKICAgIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKCJjcmVhdGUiKTsKICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgiQ0xFQVJfUE9TVCIpOwogICAgY29uc29sZS5sb2codGhpcy4kc3RvcmUuZ2V0dGVycy5HRVRfUE9TVF9MSVNUKTsKICB9LAoKICBjb21wdXRlZDogewogICAgZ2V0UG9zdExpc3QoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLkdFVF9QT1NUX0xJU1Q7CiAgICB9LAoKICAgIGxvYWRpbmcoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLkdFVF9MT0FESU5HX1NUQVRFOwogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIHJvdXRlUG9zdEFydGljbGUoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgiT1BFTl9NT0RBTCIsIHsKICAgICAgICB0aXRsZTogIuyXkOufrCIsCiAgICAgICAgY29udGVudDogInRlc3QiLAogICAgICAgIG9wdGlvbjE6ICLri6vquLAiLAogICAgICB9KTsKICAgICAgLy8gdGhpcy4kcm91dGVyLnB1c2goIi9zYXZlIik7CiAgICB9LAoKICAgIGluZmluaXRlSGFuZGxlcigkc3RhdGUpIHsKICAgICAgdGhpcy5zdGF0ZSA9ICRzdGF0ZTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goIlFVRVJZX1BPU1RfTElTVCIsIHRoaXMucGFnZU51bSsrKS50aGVuKCgpID0+IHsKICAgICAgICBpZiAodGhpcy4kc3RvcmUuZ2V0dGVycy5HRVRfUEFHRS50b3RhbFBhZ2VzID4gdGhpcy5wYWdlTnVtKSB7CiAgICAgICAgICAkc3RhdGUubG9hZGVkKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICRzdGF0ZS5jb21wbGV0ZSgpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAoKICAgIG9wZW5Qb3N0V3JpdGVyKCkgewogICAgICBpZiAoIXZhbGlkYXRlTG9naW4oKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLiRzdG9yZS5jb21taXQoIk9QRU5fUE9TVF9XUklURVIiKTsKICAgIH0sCgogICAgcmVmcmVzaCgpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCJDTEVBUl9QT1NUIik7CiAgICAgIHRoaXMucGFnZU51bSA9IDA7CiAgICAgIHRoaXMuc3RhdGUucmVzZXQoKTsKICAgIH0sCgogICAgZGVsZXRlRW1pdChpZCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiUVVFUllfREVMRVRFX1BPU1QiLCBpZCkudGhlbigoKSA9PiB7CiAgICAgICAgdGhpcy5yZWZyZXNoKCk7CiAgICAgIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["/* ## BoardList.vue 내용 */\n<template>\n  <div class=\"pa-3\">\n    <v-row row>\n      <v-col class=\"flex-grow-0 flex-shrink-0\">\n        <v-icon lef large color=\"grey\">mdi-message-reply-text</v-icon>\n      </v-col>\n      <v-col>\n        <v-btn\n          block\n          depressed\n          outlined\n          plain\n          rounded\n          text\n          @click=\"openPostWriter\"\n        >\n          <span> 자신의 생각을 말해보세요! </span>\n        </v-btn>\n      </v-col>\n      <v-col class=\"flex-grow-0 flex-shrink-0\">\n        <v-btn icon color=\"primary\" @click=\"refresh\">\n          <v-icon>mdi-cached</v-icon>\n        </v-btn>\n      </v-col>\n    </v-row>\n\n    <div id=\"posts\">\n      <post-item\n        v-for=\"(post, index) in getPostList\"\n        :key=\"index\"\n        :id=\"post.id\"\n        :nickName=\"post.userNickName\"\n        :content=\"post.content\"\n        :date=\"post.modifyDate\"\n        :likes=\"post.likes\"\n        :isLike=\"post.isLike\"\n        :comments=\"post.comments\"\n        :isWriter=\"post.isWriter\"\n        class=\"my-3\"\n      >\n      </post-item>\n    </div>\n\n    <post-write @commit=\"refresh\" />\n    <infinite-loading @infinite=\"infiniteHandler\" spinner=\"waveDots\">\n      <div\n        slot=\"no-more\"\n        style=\"color: rgb(102, 102, 102); font-size: 14px; padding: 10px 0px;\"\n      ></div>\n    </infinite-loading>\n    <v-col class=\"text-right\">\n      <v-btn color=\"primary\" @click=\"routePostArticle\">게시글 작성</v-btn>\n    </v-col>\n    <modal @pass=\"deleteEmit\" />\n  </div>\n</template>\n\n<script>\nimport InfiniteLoading from \"vue-infinite-loading\";\nimport PostItem from \"../components/PostItem.vue\";\nimport PostWrite from \"./PostWrite.vue\";\nimport Modal from \"../components/Modal.vue\";\nimport { validateLogin } from \"../api/common_api\";\n\nexport default {\n  name: \"Home\",\n  components: { PostItem, InfiniteLoading, PostWrite, Modal },\n\n  data() {\n    return {\n      pageAble: { totalPages: 0 },\n      pageNum: 0,\n      posts: \"\",\n      state: \"\",\n    };\n  },\n\n  created() {\n    console.log(\"create\");\n    this.$store.commit(\"CLEAR_POST\");\n    console.log(this.$store.getters.GET_POST_LIST);\n  },\n\n  computed: {\n    getPostList() {\n      return this.$store.getters.GET_POST_LIST;\n    },\n\n    loading() {\n      return this.$store.getters.GET_LOADING_STATE;\n    },\n  },\n  methods: {\n    routePostArticle() {\n      this.$store.commit(\"OPEN_MODAL\", {\n        title: \"에러\",\n        content: \"test\",\n        option1: \"닫기\",\n      });\n      // this.$router.push(\"/save\");\n    },\n\n    infiniteHandler($state) {\n      this.state = $state;\n      this.$store.dispatch(\"QUERY_POST_LIST\", this.pageNum++).then(() => {\n        if (this.$store.getters.GET_PAGE.totalPages > this.pageNum) {\n          $state.loaded();\n        } else {\n          $state.complete();\n        }\n      });\n    },\n\n    openPostWriter() {\n      if (!validateLogin()) {\n        return;\n      }\n      this.$store.commit(\"OPEN_POST_WRITER\");\n    },\n\n    refresh() {\n      this.$store.commit(\"CLEAR_POST\");\n      this.pageNum = 0;\n      this.state.reset();\n    },\n\n    deleteEmit(id) {\n      this.$store.dispatch(\"QUERY_DELETE_POST\", id).then(() => {\n        this.refresh();\n      });\n    },\n  },\n};\n</script>\n"]}]}