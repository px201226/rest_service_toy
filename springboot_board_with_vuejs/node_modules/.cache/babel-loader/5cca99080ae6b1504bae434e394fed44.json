{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\api\\http.js","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\api\\http.js","mtime":1610784476896},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBzdG9yZSBmcm9tICcuLi9zdG9yZSc7CmltcG9ydCB7IHNldFRva2VuSW5Mb2NhbFN0b3JhZ2UgfSBmcm9tICIuLi9zdG9yZS90b2tlbiI7CmltcG9ydCB7IHNldFNuYWNrQmFySW5mbyB9IGZyb20gIi4uL2FwaS9jb21tb25fYXBpIjsKdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICAvL2Jhc2VVUkwgOiAiaHR0cDovL2VjMi0xMy0xMjUtMTcwLTIxMC5hcC1ub3J0aGVhc3QtMi5jb21wdXRlLmFtYXpvbmF3cy5jb20iLAogIGJhc2VVUkw6ICJodHRwOi8vbG9jYWxob3N0OjgwODAiIC8vd2l0aENyZWRlbnRpYWxzOiB0cnVlLAkJCQkvLyDshKTsoJXtlbTslbwg7L+g7YKk6rCAIFJlcXVlc3Tsl5Ag7KCA7J6l65CY7Ja0IOyEuOyFmOydtCDsnKDsp4DrkKgKCn0pOwovKg0KICAgIOuqqOuToCDsmpTssq0g7KCEIGhlYWRlcuyXkCBhY2Nlc3NfdG9rZW7snYQg64u07JWEIOyghOyGoe2VnOuLpC4NCiAqLwoKaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICB2YXIgand0VG9rZW4gPSBzdG9yZS5nZXR0ZXJzLkdFVF9KV1RfVE9LRU47CiAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dFRva2VuJyk7CgogIGlmIChqd3RUb2tlbiAhPT0gbnVsbCAmJiBqd3RUb2tlbiAhPT0gIiIpIHsKICAgIGNvbnNvbGUubG9nKCJkZGRkZGRkZGRkZGQiKTsKICAgIGNvbnNvbGUubG9nKGp3dFRva2VuKTsKICAgIGNvbmZpZy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPSAiYmVhcmVyICIgKyBqd3RUb2tlbi5hY2Nlc3NfdG9rZW47IC8vY29uZmlnLmhlYWRlcnMuY29tbW9uWydYLUFVVEgtVE9LRU4nXSA9IGp3dFRva2VuOwogIH0KCiAgY29uc29sZS5sb2coJ0ludGVyY2VwdG9ycyBSZXF1ZXN0IGlzJywgY29uZmlnLCBuZXcgRGF0ZSgpKTsKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygnSW50ZXJjZXB0b3JzIFJlcXVlc3QgRXJyb3IgaXMnLCBlcnJvci5yZXNwb25zZSwgbmV3IERhdGUoKSk7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7Cmluc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgY29uc29sZS5sb2coJ0ludGVyY2VwdG9ycyBSZXNwb25zZSBpcyAnLCByZXNwb25zZSwgbmV3IERhdGUoKSk7CiAgc3RvcmUuc3RhdGUuY29tbW9uLmxvYWRpbmcgPSBmYWxzZTsKICByZXR1cm4gcmVzcG9uc2U7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdJbnRlcmNlcHRvcnMgUmVzcG9uc2UgRXJyb3IgaXMgJywgZXJyb3IucmVzcG9uc2UsIG5ldyBEYXRlKCkpOwogIHN0b3JlLnN0YXRlLmNvbW1vbi5sb2FkaW5nID0gZmFsc2U7CgogIGlmICghZXJyb3IucmVzcG9uc2UpIHsKICAgIHN0b3JlLmNvbW1pdCgnTkVUV09SS19FUlJPUicpOwogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICB9CgogIHZhciBzdGF0dXMgPSBlcnJvci5yZXNwb25zZS5zdGF0dXM7CgogIGlmIChzdGF0dXMgPT09IDQwNCkgewogICAgc3RvcmUuY29tbWl0KCdQVVNIX0VSUk9SX1BBR0UnKTsKICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgfQoKICBpZiAoc3RhdHVzID09PSA0MDApIHsKICAgIHN0b3JlLmNvbW1pdCgnT1BFTl9NT0RBTCcsIHsKICAgICAgdGl0bGU6ICfsl5Drn6wnLAogICAgICBjb250ZW50OiAi7J6F66Cl7J20IOyYrOuwlOultOyngCDslYrsirXri4jri6QiLAogICAgICBvcHRpb24xOiAn64ur6riwJwogICAgfSk7CiAgfQoKICBpZiAoc3RhdHVzID09PSA0MDEpIHsKICAgIHZhciBlcnJvckRhdGEgPSBlcnJvci5yZXNwb25zZS5kYXRhOwoKICAgIGlmIChlcnJvckRhdGEuZXJyb3IgIT09ICdpbnZhbGlkX3Rva2VuJykgewogICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwogICAgfQoKICAgIGlmIChpc0V4cGlyZWRUb2tlbihlcnJvckRhdGEpKSB7CiAgICAgIHJldHVybiBhdHRlbXB0UmVmcmVzaFRva2VuKCk7CiAgICB9IGVsc2UgewogICAgICBzdG9yZS5jb21taXQoJ0xPR09VVF9XSVRIX1RPS0VOX0lOVkFMSURFJyk7CiAgICAgIHN0b3JlLmNvbW1pdCgnU0VUX1NOQUNLQkFSJywgc2V0U25hY2tCYXJJbmZvKCfthqDtgbAg7KCV67O06rCAIOyemOuqu+uQmOyXiOyKteuLiOuLpC4g64uk7IucIOuhnOq3uOyduCDtlbTso7zshLjsmpQnLCAnZXJyb3InLCAndG9wJykpOwogICAgfQogIH0KCiAgaWYgKHN0YXR1cyA9PT0gNDAzKSB7CiAgICBzdG9yZS5jb21taXQoJ09QRU5fU05BQ0tCQVInLCBzZXRTbmFja0JhckluZm8oIuq2jO2VnOydtCDsl4bsirXri4jri6QiLCAnZXJyb3InLCAndG9wJykpOwogIH0KCiAgaWYgKHN0YXR1cyA9PT0gNTAwKSB7CiAgICBzdG9yZS5jb21taXQoJ09QRU5fTU9EQUwnLCB7CiAgICAgIHRpdGxlOiAn7Iuk7YyoJywKICAgICAgY29udGVudDogZXJyb3IucmVzcG9uc2UuZGF0YS5tZXNzYWdlLAogICAgICBvcHRpb24xOiAn64ur6riwJwogICAgfSk7CiAgfQoKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7"},{"version":3,"sources":["C:/Users/Lee-Gi-Su/IdeaProjects/restapi/springboot_board_with_vuejs/src/api/http.js"],"names":["axios","store","setTokenInLocalStorage","setSnackBarInfo","instance","create","baseURL","interceptors","request","use","config","jwtToken","getters","GET_JWT_TOKEN","localStorage","getItem","console","log","headers","Authorization","access_token","Date","error","response","Promise","reject","state","common","loading","commit","status","title","content","option1","errorData","data","isExpiredToken","attemptRefreshToken","message"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport store from '../store';\r\nimport {setTokenInLocalStorage} from \"../store/token\"\r\nimport {setSnackBarInfo} from \"../api/common_api\"\r\nconst instance = axios.create({\r\n\t//baseURL : \"http://ec2-13-125-170-210.ap-northeast-2.compute.amazonaws.com\",\r\n\tbaseURL : \"http://localhost:8080\",\r\n\t//withCredentials: true,\t\t\t\t// 설정해야 쿠키가 Request에 저장되어 세션이 유지됨\r\n});\r\n\r\n\r\n/*\r\n    모든 요청 전 header에 access_token을 담아 전송한다.\r\n */\r\ninstance.interceptors.request.use(\r\n    config => {\r\n\t\tlet jwtToken = store.getters.GET_JWT_TOKEN; \r\n\t\tlocalStorage.getItem('jwtToken');\r\n        if ((jwtToken !== null) && (jwtToken !== \"\")) {\r\n\t\t\tconsole.log(\"dddddddddddd\")\r\n\t\t\tconsole.log(jwtToken);\r\n\t\t\tconfig.headers.Authorization = \"bearer \" + jwtToken.access_token;\r\n\t\t\t//config.headers.common['X-AUTH-TOKEN'] = jwtToken;\r\n        }\r\n         console.log('Interceptors Request is', config, new Date());\r\n        return config\r\n    },\r\n    error => {\r\n         console.log('Interceptors Request Error is', error.response, new Date());\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n\r\ninstance.interceptors.response.use(\r\n   response => {\r\n\t    console.log('Interceptors Response is ', response, new Date());\r\n\t   store.state.common.loading = false;\r\n\t\treturn response;\r\n   },\r\n   function (error) {\r\n\t    console.log('Interceptors Response Error is ', error.response, new Date());\r\n\t   store.state.common.loading = false;\r\n\r\n\t   if (!error.response) {\r\n\t\t\r\n\t\t   store.commit('NETWORK_ERROR')\r\n\t\t   return Promise.reject(error);\r\n\t   }\r\n\r\n\t   let status = error.response.status;\r\n\t   if (status === 404) {\r\n\t\t   store.commit('PUSH_ERROR_PAGE');\r\n\t\t   return Promise.reject(error);\r\n\t   }\r\n\r\n\t   if( status === 400){\r\n\t\t\tstore.commit('OPEN_MODAL', {title: '에러', content: \"입력이 올바르지 않습니다\", option1: '닫기',});\r\n\t   }\r\n\t   if (status === 401) {\r\n\t\t   let errorData = error.response.data;\r\n\t\t   if (errorData.error !== 'invalid_token') {\r\n\t\t\t   return Promise.reject(error);\r\n\t\t   }\r\n\r\n\t\t   if (isExpiredToken(errorData)) {\r\n\t\t\t   return attemptRefreshToken();\r\n\t\t   } else {\r\n\t\t\t   store.commit('LOGOUT_WITH_TOKEN_INVALIDE');\r\n\t\t\t   store.commit('SET_SNACKBAR', setSnackBarInfo('토큰 정보가 잘못되었습니다. 다시 로그인 해주세요', 'error', 'top'));\r\n\t\t   }\r\n\t   }\r\n\r\n\t   if(status === 403){\r\n\t\t\tstore.commit('OPEN_SNACKBAR', setSnackBarInfo(\"권한이 없습니다\", 'error', 'top'))\r\n\t   }\r\n\r\n\t   if(status === 500){\r\n\t\t   store.commit('OPEN_MODAL', {title: '실패', content: error.response.data.message, option1: '닫기',});\r\n\t   }\r\n\t   return Promise.reject(error);\r\n   }\r\n);\r\n\r\n\r\nexport default instance;"]}]}