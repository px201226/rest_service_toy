{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\springboot-board\\springboot_board_with_vuejs\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\springboot-board\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\springboot-board\\springboot_board_with_vuejs\\src\\store\\post.js","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\springboot-board\\springboot_board_with_vuejs\\src\\store\\post.js","mtime":1607254442510},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\springboot-board\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\springboot-board\\springboot_board_with_vuejs\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\springboot-board\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Lee-Gi-Su/IdeaProjects/springboot-board/springboot_board_with_vuejs/src/store/post.js"],"names":["updatePostsList","readPostByPostId","writePost","deletePost","updatePost","router","state","post","title","content","author","modifiedDate","userEmail","postList","getters","GET_POST_DETAIL","GET_POST_LIST","mutations","SET_POST_LIST","SET_POST_DETAIL","actions","QUERY_POST_DETAIL","context","id","response","commit","data","console","log","Promise","reject","QUERY_DELETE_POST","alert","push","QUERY_POST_LIST","QUERY_WRITE_POST","requestPostSaveDto","QUERY_UPDATE_POST","requestPostUpdateDto"],"mappings":";;;AAAA,SAASA,eAAT,EAA0BC,gBAA1B,EAA4CC,SAA5C,EAAuDC,UAAvD,EAAkEC,UAAlE,QAAoF,iBAApF;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,IADH;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,MAAM,EAAE,KAHJ;AAIJC,IAAAA,YAAY,EAAE,IAJV;AAKJC,IAAAA,SAAS,EAAE;AALP,GADM;AASZC,EAAAA,QAAQ,EAAE;AATE,CAAd,C,CAYA;;AACA,IAAMC,OAAO,GAAG;AACdC,EAAAA,eADc,2BACET,KADF,EACS;AACrB,WAAOA,KAAK,CAACC,IAAb;AACD,GAHa;AAKdS,EAAAA,aALc,yBAKAV,KALA,EAKO;AACnB,WAAOA,KAAK,CAACO,QAAb;AACD;AAPa,CAAhB,C,CAUA;;AACA,IAAMI,SAAS,GAAG;AAChBC,EAAAA,aADgB,yBACFZ,KADE,EACKO,QADL,EACe;AAC7BP,IAAAA,KAAK,CAACO,QAAN,GAAiBA,QAAjB;AACD,GAHe;AAKhBM,EAAAA,eALgB,2BAKAb,KALA,EAKOC,IALP,EAKa;AAC3BD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD;AAPe,CAAlB,C,CAUA;;AACA,IAAMa,OAAO,GAAG;AACRC,EAAAA,iBADQ,6BACUC,OADV,EACmBC,EADnB,EACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEVtB,gBAAgB,CAACsB,EAAD,CAFN;;AAAA;AAE3BC,cAAAA,QAF2B;AAGjCF,cAAAA,OAAO,CAACG,MAAR,CAAe,iBAAf,EAAkCD,QAAQ,CAACE,IAA3C;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AAJiC,+CAM1BF,QAAQ,CAACE,IANiB;;AAAA;AAAA;AAAA;AAAA,+CAS1BG,OAAO,CAACC,MAAR,aAT0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWpC,GAZa;AAcRC,EAAAA,iBAdQ,6BAcUT,OAdV,EAckBC,EAdlB,EAcsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAETpB,UAAU,CAACoB,EAAD,CAFD;;AAAA;AAE1BC,cAAAA,QAF0B;AAGhCQ,cAAAA,KAAK,CAAC,cAAD,CAAL;AACA3B,cAAAA,MAAM,CAAC4B,IAAP,CAAY,GAAZ;AAJgC,gDAKzBT,QAAQ,CAACE,IALgB;;AAAA;AAAA;AAAA;AAOhCM,cAAAA,KAAK,CAAC,UAAD,CAAL;AAPgC,gDAQzBH,OAAO,CAACC,MAAR,cARyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnC,GAxBa;AA0BRI,EAAAA,eA1BQ,2BA0BQZ,OA1BR,EA0BiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEJtB,eAAe,EAFX;;AAAA;AAErBwB,cAAAA,QAFqB;AAG3BF,cAAAA,OAAO,CAACG,MAAR,CAAe,eAAf,EAAgCD,QAAQ,CAACE,IAAzC;AAH2B,gDAIpBF,QAAQ,CAACE,IAJW;;AAAA;AAAA;AAAA;AAAA,gDAMpBG,OAAO,CAACC,MAAR,cANoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ9B,GAlCa;AAoCRK,EAAAA,gBApCQ,4BAoCSb,OApCT,EAoCkBc,kBApClB,EAoCsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEzBlC,SAAS,CAACkC,kBAAD,CAFgB;;AAAA;AAE1CZ,cAAAA,QAF0C;AAGhDnB,cAAAA,MAAM,CAAC4B,IAAP,CAAY,GAAZ;AAHgD,gDAIzCT,QAAQ,CAACE,IAJgC;;AAAA;AAAA;AAAA;AAMhDM,cAAAA,KAAK,CAAC,UAAD,CAAL;AANgD,gDAOzCH,OAAO,CAACC,MAAR,cAPyC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnD,GA9Ca;AAgDRO,EAAAA,iBAhDQ,6BAgDUf,OAhDV,EAgDmBgB,oBAhDnB,EAgDyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE5BlC,UAAU,CAACkC,oBAAoB,CAACf,EAAtB,EAA0Be,oBAA1B,CAFkB;;AAAA;AAE7Cd,cAAAA,QAF6C;AAGnDQ,cAAAA,KAAK,CAAC,eAAD,CAAL;AACA3B,cAAAA,MAAM,CAAC4B,IAAP,CAAY,GAAZ;AAJmD,gDAK5CT,QAAQ,CAACE,IALmC;;AAAA;AAAA;AAAA;AAAA,gDAO5CG,OAAO,CAACC,MAAR,cAP4C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUtD;AA1Da,CAAhB;AA6DA,eAAe;AACbxB,EAAAA,KAAK,EAALA,KADa;AAEbW,EAAAA,SAAS,EAATA,SAFa;AAGbG,EAAAA,OAAO,EAAPA,OAHa;AAIbN,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { updatePostsList, readPostByPostId, writePost, deletePost,updatePost } from \"../api/post_api\";\nimport router from \"../router\";\n\n// state\nconst state = {\n  post: {\n    title: \"제목\",\n    content: \"빈 내용\",\n    author: \"작성자\",\n    modifiedDate: \"일자\",\n    userEmail: \"\",\n  },\n\n  postList: [],\n};\n\n// getters\nconst getters = {\n  GET_POST_DETAIL(state) {\n    return state.post;\n  },\n\n  GET_POST_LIST(state) {\n    return state.postList;\n  },\n};\n\n// mutations\nconst mutations = {\n  SET_POST_LIST(state, postList) {\n    state.postList = postList;\n  },\n\n  SET_POST_DETAIL(state, post) {\n    state.post = post;\n  },\n};\n\n// actions\nconst actions = {\n  async QUERY_POST_DETAIL(context, id) {\n    try {\n      const response = await readPostByPostId(id);\n      context.commit(\"SET_POST_DETAIL\", response.data);\n      console.log(response.data);\n\n      return response.data;\n    } catch (e) {\n\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_DELETE_POST(context,id) {\n    try {\n      const response = await deletePost(id);\n      alert('게시물을 삭제하였습니다');\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      alert(\"권한이 없습니다\");\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_POST_LIST(context) {\n    try {\n      const response = await updatePostsList();\n      context.commit(\"SET_POST_LIST\", response.data);\n      return response.data;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_WRITE_POST(context, requestPostSaveDto) {\n    try {\n      const response = await writePost(requestPostSaveDto);\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      alert(\"권한이 없습니다\");\n      return Promise.reject(e);\n    } finally {\n    }\n  },\n\n  async QUERY_UPDATE_POST(context, requestPostUpdateDto) {\n    try {\n      const response = await updatePost(requestPostUpdateDto.id, requestPostUpdateDto);\n      alert('게시물을 수정하였습니다.');\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      return Promise.reject(e);\n      } finally {\n    }\n  },\n};\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"]}]}