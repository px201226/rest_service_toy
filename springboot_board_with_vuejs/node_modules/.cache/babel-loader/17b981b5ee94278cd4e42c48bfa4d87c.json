{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\post.js","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\post.js","mtime":1609923085776},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Lee-Gi-Su/IdeaProjects/restapi/springboot_board_with_vuejs/src/store/post.js"],"names":["getPostsList","writePost","deletePost","updatePost","getPost","setTokenInLocalStorage","setSnackBarInfo","router","state","page","posts","post","getters","GET_PAGE","GET_POST_LIST","GET_POST","mutations","ADD_POST_LIST","concat","SET_PAGE","SET_POST","CLEAR_POST","actions","QUERY_POST_LIST","context","commit","response","data","content","Promise","reject","QUERY_GET_POST","postId","console","log","QUERY_DELETE_POST","id","title","message","option1","QUERY_WRITE_POST","req","QUERY_UPDATE_POST","push"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,UAAlC,EAA6CC,UAA7C,EAAyDC,OAAzD,QAAwE,iBAAxE;AACA,SAAQC,sBAAR,EAA+BC,eAA/B,QAAqD,SAArD;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,IAAMC,KAAK,GAAG;AACZ;AACAC,EAAAA,IAAI,EAAC,EAFO;AAMZ;AACAC,EAAAA,KAAK,EAAE,EAPK;AASZC,EAAAA,IAAI,EAAC;AATO,CAAd,C,CAYA;;AACA,IAAMC,OAAO,GAAG;AAEdC,EAAAA,QAFc,oBAELL,KAFK,EAEC;AACb,WAAOA,KAAK,CAACC,IAAb;AACD,GAJa;AAMdK,EAAAA,aANc,yBAMAN,KANA,EAMO;AACnB,WAAOA,KAAK,CAACE,KAAb;AACD,GARa;AAUdK,EAAAA,QAVc,oBAULP,KAVK,EAUC;AACb,WAAOA,KAAK,CAACG,IAAb;AACD;AAZa,CAAhB,C,CAgBA;;AACA,IAAMK,SAAS,GAAG;AAChBC,EAAAA,aADgB,yBACFT,KADE,EACKE,KADL,EACY;AAC1BF,IAAAA,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYQ,MAAZ,CAAmBR,KAAnB,CAAd;AACD,GAHe;AAKhBS,EAAAA,QALgB,oBAKPX,KALO,EAKAC,IALA,EAKK;AACnBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD,GAPe;AAShBW,EAAAA,QATgB,oBASPZ,KATO,EASAG,IATA,EASK;AACnBH,IAAAA,KAAK,CAACG,IAAN,GAAaA,IAAb;AACD,GAXe;AAahBU,EAAAA,UAbgB,sBAaLb,KAbK,EAaC;AACfA,IAAAA,KAAK,CAACC,IAAN,GAAa,EAAb;AACAD,IAAAA,KAAK,CAACE,KAAN,GAAc,EAAd;AACD;AAhBe,CAAlB,C,CAoBA;;AACA,IAAMY,OAAO,GAAG;AAERC,EAAAA,eAFQ,2BAEQC,OAFR,EAEiBf,IAFjB,EAEuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjCe,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf;AAFiC;AAAA,qBAGVzB,YAAY,CAACS,IAAD,CAHF;;AAAA;AAG3BiB,cAAAA,QAH2B;AAIjCF,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf,EAAgCC,QAAQ,CAACC,IAAT,CAAcC,OAA9C;AACAJ,cAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BC,QAAQ,CAACC,IAAT,CAAclB,IAAzC;AALiC,+CAMzBiB,QAAQ,CAACC,IAAT,CAAcC,OANW;;AAAA;AAAA;AAAA;AAAA,+CAQ1BC,OAAO,CAACC,MAAR,aAR0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUpC,GAZa;AAcRC,EAAAA,cAdQ,0BAcOP,OAdP,EAcgBQ,MAdhB,EAcwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElCR,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf;AAFkC;AAAA,qBAGXrB,OAAO,CAAC4B,MAAD,CAHI;;AAAA;AAG5BN,cAAAA,QAH4B;AAIlCF,cAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2BC,QAAQ,CAACC,IAApC;AACAM,cAAAA,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACC,IAArB;AALkC,gDAM1BD,QAAQ,CAACC,IANiB;;AAAA;AAAA;AAAA;AAAA,gDAQ3BE,OAAO,CAACC,MAAR,cAR2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUrC,GAxBa;AA0BRK,EAAAA,iBA1BQ,6BA0BUX,OA1BV,EA0BkBY,EA1BlB,EA0BsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhCZ,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf;AAFgC;AAAA,qBAGTvB,UAAU,CAACkC,EAAD,CAHD;;AAAA;AAG1BV,cAAAA,QAH0B;AAIhCF,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf,EAAgCnB,eAAe,CAAC,eAAD,EAAkB,SAAlB,EAA6B,KAA7B,CAA/C;AAJgC,gDAKzBoB,QAAQ,CAACC,IALgB;;AAAA;AAAA;AAAA;AAOhCH,cAAAA,OAAO,CAACC,MAAR,CAAe,YAAf,EAA6B;AAACY,gBAAAA,KAAK,EAAE,IAAR;AAAcT,gBAAAA,OAAO,EAAE,aAAEF,QAAF,CAAWY,OAAlC;AAA2CC,gBAAAA,OAAO,EAAE;AAApD,eAA7B;AAPgC,gDAQzBV,OAAO,CAACC,MAAR,cARyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnC,GApCa;AAwCRU,EAAAA,gBAxCQ,4BAwCShB,OAxCT,EAwCkBiB,GAxClB,EAwCuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjCjB,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf;AAFiC;AAAA,qBAGVxB,SAAS,CAACwC,GAAD,CAHC;;AAAA;AAG3Bf,cAAAA,QAH2B;AAIjCF,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf,EAAgCnB,eAAe,CAAC,eAAD,EAAkB,SAAlB,EAA6B,KAA7B,CAA/C;AAJiC,gDAK1BoB,QAAQ,CAACC,IALiB;;AAAA;AAAA;AAAA;AAOjCH,cAAAA,OAAO,CAACC,MAAR,CAAe,YAAf,EAA6B;AAACY,gBAAAA,KAAK,EAAE,IAAR;AAAcT,gBAAAA,OAAO,EAAE,aAAEF,QAAF,CAAWC,IAAX,CAAgBW,OAAvC;AAAgDC,gBAAAA,OAAO,EAAE;AAAzD,eAA7B;AAPiC,gDAQ1BV,OAAO,CAACC,MAAR,cAR0B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWpC,GAnDa;AAqDRY,EAAAA,iBArDQ,6BAqDUlB,OArDV,EAqDmBiB,GArDnB,EAqDwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAElCjB,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf;AAFkC;AAAA,qBAGXtB,UAAU,CAACsC,GAAG,CAACL,EAAL,EAASK,GAAT,CAHC;;AAAA;AAG5Bf,cAAAA,QAH4B;AAIlCF,cAAAA,OAAO,CAACC,MAAR,CAAe,eAAf,EAAgCnB,eAAe,CAAC,eAAD,EAAkB,SAAlB,EAA6B,KAA7B,CAA/C;AACAC,cAAAA,MAAM,CAACoC,IAAP,CAAY,GAAZ;AALkC,gDAM3BjB,QAAQ,CAACC,IANkB;;AAAA;AAAA;AAAA;AAQlCH,cAAAA,OAAO,CAACC,MAAR,CAAe,YAAf,EAA6B;AAACY,gBAAAA,KAAK,EAAE,IAAR;AAAcT,gBAAAA,OAAO,EAAE,aAAEF,QAAF,CAAWY,OAAlC;AAA2CC,gBAAAA,OAAO,EAAE;AAApD,eAA7B;AARkC,gDAS3BV,OAAO,CAACC,MAAR,cAT2B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYrC;AAjEa,CAAhB;AAoEA,eAAe;AACbtB,EAAAA,KAAK,EAALA,KADa;AAEbQ,EAAAA,SAAS,EAATA,SAFa;AAGbM,EAAAA,OAAO,EAAPA,OAHa;AAIbV,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { getPostsList, writePost, deletePost,updatePost, getPost } from \"../api/post_api\";\nimport {setTokenInLocalStorage,setSnackBarInfo} from \"./token\"\nimport router from \"../router\";\n\n// state\nconst state = {\n  // 페이지 정보  \n  page:{\n   \n  },\n\n  // 포스트 리스트\n  posts: [],\n\n  post:{},\n};\n\n// getters\nconst getters = {\n\n  GET_PAGE(state){\n    return state.page;\n  },\n\n  GET_POST_LIST(state) {\n    return state.posts;\n  },\n\n  GET_POST(state){\n    return state.post;\n  },\n\n};\n\n// mutations\nconst mutations = {\n  ADD_POST_LIST(state, posts) {\n    state.posts = state.posts.concat(posts);\n  },\n\n  SET_PAGE(state, page){\n    state.page = page;\n  },\n  \n  SET_POST(state, post){\n    state.post = post;\n  },\n\n  CLEAR_POST(state){\n    state.page = {};\n    state.posts = [];\n  }\n\n};\n\n// actions\nconst actions = {\n\n  async QUERY_POST_LIST(context, page) {\n    try {\n      context.commit('START_LOADING')\n      const response = await getPostsList(page);\n      context.commit(\"ADD_POST_LIST\", response.data.content);\n      context.commit(\"SET_PAGE\", response.data.page);\n      return  response.data.content;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_GET_POST(context, postId) {\n    try {\n      context.commit('START_LOADING')\n      const response = await getPost(postId);\n      context.commit(\"SET_POST\", response.data);\n      console.log(response.data);\n      return  response.data;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_DELETE_POST(context,id) {\n    try {\n      context.commit('START_LOADING')\n      const response = await deletePost(id);\n      context.commit('OPEN_SNACKBAR', setSnackBarInfo('게시물이 삭제되었습니다.', 'success', 'top'))\n      return response.data;\n    } catch (e) {\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.message, option1: '닫기',});\n      return Promise.reject(e);\n    }\n  },\n\n  \n\n  async QUERY_WRITE_POST(context, req) {\n    try {\n      context.commit('START_LOADING')\n      const response = await writePost(req);\n      context.commit('OPEN_SNACKBAR', setSnackBarInfo('게시물이 작성되었습니다.', 'success', 'top'))\n      return response.data;\n    } catch (e) {\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.data.message, option1: '닫기',});\n      return Promise.reject(e);\n    } finally {\n    }\n  },\n\n  async QUERY_UPDATE_POST(context, req) {\n    try {\n      context.commit('START_LOADING')\n      const response = await updatePost(req.id, req);\n      context.commit('OPEN_SNACKBAR', setSnackBarInfo('게시물이 수정되었습니다.', 'success', 'top'))\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.message, option1: '닫기',});\n      return Promise.reject(e);\n      } finally {\n    }\n  },\n};\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"]}]}