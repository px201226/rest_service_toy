{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\post.js","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\post.js","mtime":1609576681904},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Lee-Gi-Su/IdeaProjects/restapi/springboot_board_with_vuejs/src/store/post.js"],"names":["getPostsList","readPostByPostId","writePost","deletePost","updatePost","router","state","post","posts","getters","GET_POST_DETAIL","GET_POST_LIST","mutations","ADD_POST_LIST","concat","SET_POST_DETAIL","actions","QUERY_POST_DETAIL","context","id","response","commit","data","console","log","Promise","reject","QUERY_DELETE_POST","alert","push","QUERY_POST_LIST","page","_embedded","postModels","QUERY_WRITE_POST","requestPostSaveDto","QUERY_UPDATE_POST","requestPostUpdateDto"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,gBAAvB,EAAyCC,SAAzC,EAAoDC,UAApD,EAA+DC,UAA/D,QAAiF,iBAAjF;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,EADM;AAKZC,EAAAA,KAAK,EAAE;AALK,CAAd,C,CAQA;;AACA,IAAMC,OAAO,GAAG;AACdC,EAAAA,eADc,2BACEJ,KADF,EACS;AACrB,WAAOA,KAAK,CAACC,IAAb;AACD,GAHa;AAKdI,EAAAA,aALc,yBAKAL,KALA,EAKO;AACnB,WAAOA,KAAK,CAACE,KAAb;AACD;AAPa,CAAhB,C,CAUA;;AACA,IAAMI,SAAS,GAAG;AAChBC,EAAAA,aADgB,yBACFP,KADE,EACKE,KADL,EACY;AAC1BF,IAAAA,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAAN,CAAYM,MAAZ,CAAmBN,KAAnB,CAAd;AACD,GAHe;AAKhBO,EAAAA,eALgB,2BAKAT,KALA,EAKOC,IALP,EAKa;AAC3BD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACD;AAPe,CAAlB,C,CAUA;;AACA,IAAMS,OAAO,GAAG;AACRC,EAAAA,iBADQ,6BACUC,OADV,EACmBC,EADnB,EACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEVlB,gBAAgB,CAACkB,EAAD,CAFN;;AAAA;AAE3BC,cAAAA,QAF2B;AAGjCF,cAAAA,OAAO,CAACG,MAAR,CAAe,iBAAf,EAAkCD,QAAQ,CAACE,IAA3C;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AAJiC,+CAM1BF,QAAQ,CAACE,IANiB;;AAAA;AAAA;AAAA;AAAA,+CAS1BG,OAAO,CAACC,MAAR,aAT0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWpC,GAZa;AAcRC,EAAAA,iBAdQ,6BAcUT,OAdV,EAckBC,EAdlB,EAcsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEThB,UAAU,CAACgB,EAAD,CAFD;;AAAA;AAE1BC,cAAAA,QAF0B;AAGhCQ,cAAAA,KAAK,CAAC,cAAD,CAAL;AACAvB,cAAAA,MAAM,CAACwB,IAAP,CAAY,GAAZ;AAJgC,gDAKzBT,QAAQ,CAACE,IALgB;;AAAA;AAAA;AAAA;AAOhCM,cAAAA,KAAK,CAAC,UAAD,CAAL;AAPgC,gDAQzBH,OAAO,CAACC,MAAR,cARyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnC,GAxBa;AA0BRI,EAAAA,eA1BQ,2BA0BQZ,OA1BR,EA0BiBa,IA1BjB,EA0BuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEV/B,YAAY,CAAC+B,IAAD,CAFF;;AAAA;AAE3BX,cAAAA,QAF2B;AAGjCF,cAAAA,OAAO,CAACG,MAAR,CAAe,eAAf,EAAgCD,QAAQ,CAACE,IAAT,CAAcU,SAAd,CAAwBC,UAAxD;AACAV,cAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAAT,CAAcU,SAAd,CAAwBC,UAApC;AAJiC,gDAK1Bb,QAAQ,CAACE,IAAT,CAAcU,SAAd,CAAwBC,UALE;;AAAA;AAAA;AAAA;AAAA,gDAO1BR,OAAO,CAACC,MAAR,cAP0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASpC,GAnCa;AAqCRQ,EAAAA,gBArCQ,4BAqCShB,OArCT,EAqCkBiB,kBArClB,EAqCsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEzBjC,SAAS,CAACiC,kBAAD,CAFgB;;AAAA;AAE1Cf,cAAAA,QAF0C;AAGhDf,cAAAA,MAAM,CAACwB,IAAP,CAAY,GAAZ;AAHgD,gDAIzCT,QAAQ,CAACE,IAJgC;;AAAA;AAAA;AAAA;AAMhDM,cAAAA,KAAK,CAAC,UAAD,CAAL;AANgD,gDAOzCH,OAAO,CAACC,MAAR,cAPyC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnD,GA/Ca;AAiDRU,EAAAA,iBAjDQ,6BAiDUlB,OAjDV,EAiDmBmB,oBAjDnB,EAiDyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE5BjC,UAAU,CAACiC,oBAAoB,CAAClB,EAAtB,EAA0BkB,oBAA1B,CAFkB;;AAAA;AAE7CjB,cAAAA,QAF6C;AAGnDQ,cAAAA,KAAK,CAAC,eAAD,CAAL;AACAvB,cAAAA,MAAM,CAACwB,IAAP,CAAY,GAAZ;AAJmD,gDAK5CT,QAAQ,CAACE,IALmC;;AAAA;AAAA;AAAA;AAAA,gDAO5CG,OAAO,CAACC,MAAR,cAP4C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUtD;AA3Da,CAAhB;AA8DA,eAAe;AACbpB,EAAAA,KAAK,EAALA,KADa;AAEbM,EAAAA,SAAS,EAATA,SAFa;AAGbI,EAAAA,OAAO,EAAPA,OAHa;AAIbP,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { getPostsList, readPostByPostId, writePost, deletePost,updatePost } from \"../api/post_api\";\nimport router from \"../router\";\n\n// state\nconst state = {\n  post: {\n\n  },\n\n  posts: [],\n};\n\n// getters\nconst getters = {\n  GET_POST_DETAIL(state) {\n    return state.post;\n  },\n\n  GET_POST_LIST(state) {\n    return state.posts;\n  },\n};\n\n// mutations\nconst mutations = {\n  ADD_POST_LIST(state, posts) {\n    state.posts = state.posts.concat(posts);\n  },\n\n  SET_POST_DETAIL(state, post) {\n    state.post = post;\n  },\n};\n\n// actions\nconst actions = {\n  async QUERY_POST_DETAIL(context, id) {\n    try {\n      const response = await readPostByPostId(id);\n      context.commit(\"SET_POST_DETAIL\", response.data);\n      console.log(response.data);\n\n      return response.data;\n    } catch (e) {\n\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_DELETE_POST(context,id) {\n    try {\n      const response = await deletePost(id);\n      alert('게시물을 삭제하였습니다');\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      alert(\"권한이 없습니다\");\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_POST_LIST(context, page) {\n    try {\n      const response = await getPostsList(page);\n      context.commit(\"ADD_POST_LIST\", response.data._embedded.postModels);\n      console.log(response.data._embedded.postModels);\n      return response.data._embedded.postModels;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_WRITE_POST(context, requestPostSaveDto) {\n    try {\n      const response = await writePost(requestPostSaveDto);\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      alert(\"권한이 없습니다\");\n      return Promise.reject(e);\n    } finally {\n    }\n  },\n\n  async QUERY_UPDATE_POST(context, requestPostUpdateDto) {\n    try {\n      const response = await updatePost(requestPostUpdateDto.id, requestPostUpdateDto);\n      alert('게시물을 수정하였습니다.');\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      return Promise.reject(e);\n      } finally {\n    }\n  },\n};\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"]}]}