{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\post.js","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\post.js","mtime":1609829993851},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Lee-Gi-Su/IdeaProjects/restapi/springboot_board_with_vuejs/src/store/post.js"],"names":["getPostsList","readPostByPostId","writePost","deletePost","updatePost","router","state","post","page","posts","getters","GET_POST_DETAIL","GET_POST_LIST","GET_PAGE","mutations","ADD_POST_LIST","concat","SET_PAGE","console","log","SET_POST_DETAIL","actions","QUERY_POST_LIST","context","commit","response","data","content","Promise","reject","QUERY_POST_DETAIL","id","QUERY_DELETE_POST","alert","push","QUERY_WRITE_POST","requestPostSaveDto","QUERY_UPDATE_POST","requestPostUpdateDto"],"mappings":"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","sourcesContent":["import { getPostsList, readPostByPostId, writePost, deletePost,updatePost } from \"../api/post_api\";\nimport router from \"../router\";\n\n// state\nconst state = {\n  post: {\n\n  },\n  \n  page:{\n   \n  },\n  posts: [],\n};\n\n// getters\nconst getters = {\n  GET_POST_DETAIL(state) {\n    return state.post;\n  },\n\n  GET_POST_LIST(state) {\n    return state.posts;\n  },\n\n  GET_PAGE(state){\n    return state.page;\n  }\n};\n\n// mutations\nconst mutations = {\n  ADD_POST_LIST(state, posts) {\n    state.posts = state.posts.concat(posts);\n  },\n\n  SET_PAGE(state, page){\n    console.log(page);\n    state.page = page;\n    console.log(state.page);\n  },\n\n  SET_POST_DETAIL(state, post) {\n    state.post = post;\n  },\n};\n\n// actions\nconst actions = {\n\n  async QUERY_POST_LIST(context, page) {\n    try {\n      context.commit('START_LOADING')\n      const response = await getPostsList(page);\n      context.commit(\"ADD_POST_LIST\", response.data.content);\n      context.commit(\"SET_PAGE\", response.data.page);\n      console.log(response.data.page);\n      return  response.data.content;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_POST_DETAIL(context, id) {\n    try {\n      const response = await readPostByPostId(id);\n      context.commit(\"SET_POST_DETAIL\", response.data);\n      console.log(response.data);\n\n      return response.data;\n    } catch (e) {\n\n      return Promise.reject(e);\n    }\n  },\n\n  async QUERY_DELETE_POST(context,id) {\n    try {\n      const response = await deletePost(id);\n      alert('게시물을 삭제하였습니다');\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      alert(\"권한이 없습니다\");\n      return Promise.reject(e);\n    }\n  },\n\n  \n\n  async QUERY_WRITE_POST(context, requestPostSaveDto) {\n    try {\n      const response = await writePost(requestPostSaveDto);\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      alert(\"권한이 없습니다\");\n      return Promise.reject(e);\n    } finally {\n    }\n  },\n\n  async QUERY_UPDATE_POST(context, requestPostUpdateDto) {\n    try {\n      const response = await updatePost(requestPostUpdateDto.id, requestPostUpdateDto);\n      alert('게시물을 수정하였습니다.');\n      router.push(\"/\");\n      return response.data;\n    } catch (e) {\n      return Promise.reject(e);\n      } finally {\n    }\n  },\n};\n\nexport default {\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"]}]}