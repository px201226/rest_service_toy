{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\api\\http.js","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\api\\http.js","mtime":1609490115725},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBzdG9yZSBmcm9tICcuLi9zdG9yZSc7CnZhciBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7CiAgLy9iYXNlVVJMIDogImh0dHA6Ly9lYzItMTMtMTI1LTE3MC0yMTAuYXAtbm9ydGhlYXN0LTIuY29tcHV0ZS5hbWF6b25hd3MuY29tIiwKICBiYXNlVVJMOiAiaHR0cDovL2xvY2FsaG9zdDo4MDgwIiwKICB3aXRoQ3JlZGVudGlhbHM6IHRydWUgLy8g7ISk7KCV7ZW07JW8IOy/oO2CpOqwgCBSZXF1ZXN07JeQIOyggOyepeuQmOyWtCDshLjshZjsnbQg7Jyg7KeA65CoCgp9KTsKLyoKICAgIOuqqOuToCDsmpTssq0g7KCEIGhlYWRlcuyXkCBhY2Nlc3NfdG9rZW7snYQg64u07JWEIOyghOyGoe2VnOuLpC4KICovCgppbnN0YW5jZS5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIHZhciBqd3RUb2tlbiA9IHN0b3JlLmdldHRlcnMuR0VUX0pXVF9UT0tFTjsKICBjb25zb2xlLmxvZygiaW50ZXJjZXB0b3IiKTsKICBjb25zb2xlLmxvZyhqd3RUb2tlbik7CiAgbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dFRva2VuJyk7CgogIGlmIChqd3RUb2tlbiAhPT0gbnVsbCkgewogICAgY29uZmlnLmhlYWRlcnMuY29tbW9uWydYLUFVVEgtVE9LRU4nXSA9IGp3dFRva2VuOwogICAgY29uc29sZS5sb2coIu2XpOuNlOyEpOyglSIpOwogIH0KCiAgY29uc29sZS5sb2coJ0ludGVyY2VwdG9ycyBSZXF1ZXN0IGlzJywgY29uZmlnLCBuZXcgRGF0ZSgpKTsKICByZXR1cm4gY29uZmlnOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygnSW50ZXJjZXB0b3JzIFJlcXVlc3QgRXJyb3IgaXMnLCBlcnJvci5yZXNwb25zZSwgbmV3IERhdGUoKSk7CiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7Cmluc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgY29uc29sZS5sb2coJ0ludGVyY2VwdG9ycyBSZXNwb25zZSBpcyAnLCByZXNwb25zZSwgbmV3IERhdGUoKSk7CiAgcmV0dXJuIHJlc3BvbnNlOwp9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICBjb25zb2xlLmxvZygnSW50ZXJjZXB0b3JzIFJlc3BvbnNlIEVycm9yIGlzICcsIGVycm9yLnJlc3BvbnNlLCBuZXcgRGF0ZSgpKTsKCiAgaWYgKCFlcnJvci5yZXNwb25zZSkgewogICAgc3RvcmUuY29tbWl0KCdORVRXT1JLX0VSUk9SJyk7CiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwogIH0KCiAgdmFyIHN0YXR1cyA9IGVycm9yLnJlc3BvbnNlLnN0YXR1czsKCiAgaWYgKHN0YXR1cyA9PT0gNTAwKSB7CiAgICBzdG9yZS5jb21taXQoJ1BVU0hfRVJST1JfUEFHRScpOwogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICB9CgogIGlmIChzdGF0dXMgPT09IDQwMSkgewogICAgdmFyIGVycm9yRGF0YSA9IGVycm9yLnJlc3BvbnNlLmRhdGE7CgogICAgaWYgKGVycm9yRGF0YS5lcnJvciAhPT0gJ2ludmFsaWRfdG9rZW4nKSB7CiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7CiAgICB9CgogICAgaWYgKGlzRXhwaXJlZFRva2VuKGVycm9yRGF0YSkpIHsKICAgICAgcmV0dXJuIGF0dGVtcHRSZWZyZXNoVG9rZW4oKTsKICAgIH0gZWxzZSB7CiAgICAgIHN0b3JlLmNvbW1pdCgnTE9HT1VUX1dJVEhfVE9LRU5fSU5WQUxJREUnKTsKICAgICAgc3RvcmUuY29tbWl0KCdTRVRfU05BQ0tCQVInLCBzZXRTbmFja0JhckluZm8oJ+2GoO2BsCDsoJXrs7TqsIAg7J6Y66q765CY7JeI7Iq164uI64ukLiDri6Tsi5wg66Gc6re47J24IO2VtOyjvOyEuOyalCcsICdlcnJvcicsICd0b3AnKSk7CiAgICB9CiAgfQoKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsKZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7"},{"version":3,"sources":["C:/Users/Lee-Gi-Su/IdeaProjects/restapi/springboot_board_with_vuejs/src/api/http.js"],"names":["axios","store","instance","create","baseURL","withCredentials","interceptors","request","use","config","jwtToken","getters","GET_JWT_TOKEN","console","log","localStorage","getItem","headers","common","Date","error","response","Promise","reject","commit","status","errorData","data","isExpiredToken","attemptRefreshToken","setSnackBarInfo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC7B;AACAC,EAAAA,OAAO,EAAG,uBAFmB;AAG7BC,EAAAA,eAAe,EAAE,IAHY,CAGH;;AAHG,CAAb,CAAjB;AAOA;AACA;AACA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACI,UAAAC,MAAM,EAAI;AACZ,MAAIC,QAAQ,GAAGT,KAAK,CAACU,OAAN,CAAcC,aAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAK,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB;;AACM,MAAIN,QAAQ,KAAK,IAAjB,EAAuB;AAC5BD,IAAAA,MAAM,CAACQ,OAAP,CAAeC,MAAf,CAAsB,cAAtB,IAAwCR,QAAxC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACM;;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCL,MAAvC,EAA+C,IAAIU,IAAJ,EAA/C;AACD,SAAOV,MAAP;AACH,CAZL,EAaI,UAAAW,KAAK,EAAI;AACJP,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CM,KAAK,CAACC,QAAnD,EAA6D,IAAIF,IAAJ,EAA7D;AACD,SAAOG,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH,CAhBL;AAoBAlB,QAAQ,CAACI,YAAT,CAAsBe,QAAtB,CAA+Bb,GAA/B,CACG,UAAAa,QAAQ,EAAI;AACVR,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCO,QAAzC,EAAmD,IAAIF,IAAJ,EAAnD;AAEH,SAAOE,QAAP;AACE,CALJ,EAMG,UAAUD,KAAV,EAAiB;AACfP,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CM,KAAK,CAACC,QAArD,EAA+D,IAAIF,IAAJ,EAA/D;;AAED,MAAI,CAACC,KAAK,CAACC,QAAX,EAAqB;AAEpBpB,IAAAA,KAAK,CAACuB,MAAN,CAAa,eAAb;AACA,WAAOF,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACA;;AAED,MAAIK,MAAM,GAAGL,KAAK,CAACC,QAAN,CAAeI,MAA5B;;AACA,MAAIA,MAAM,KAAK,GAAf,EAAoB;AACnBxB,IAAAA,KAAK,CAACuB,MAAN,CAAa,iBAAb;AACA,WAAOF,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACA;;AAED,MAAIK,MAAM,KAAK,GAAf,EAAoB;AACnB,QAAIC,SAAS,GAAGN,KAAK,CAACC,QAAN,CAAeM,IAA/B;;AACA,QAAID,SAAS,CAACN,KAAV,KAAoB,eAAxB,EAAyC;AACxC,aAAOE,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACA;;AAED,QAAIQ,cAAc,CAACF,SAAD,CAAlB,EAA+B;AAC9B,aAAOG,mBAAmB,EAA1B;AACA,KAFD,MAEO;AACN5B,MAAAA,KAAK,CAACuB,MAAN,CAAa,4BAAb;AACAvB,MAAAA,KAAK,CAACuB,MAAN,CAAa,cAAb,EAA6BM,eAAe,CAAC,6BAAD,EAAgC,OAAhC,EAAyC,KAAzC,CAA5C;AACA;AACD;;AAED,SAAOR,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACA,CApCJ;AAwCA,eAAelB,QAAf","sourcesContent":["import axios from 'axios';\nimport store from '../store';\n\nconst instance = axios.create({\n\t//baseURL : \"http://ec2-13-125-170-210.ap-northeast-2.compute.amazonaws.com\",\n\tbaseURL : \"http://localhost:8080\",\n\twithCredentials: true,\t\t\t\t// 설정해야 쿠키가 Request에 저장되어 세션이 유지됨\n});\n\n\n/*\n    모든 요청 전 header에 access_token을 담아 전송한다.\n */\ninstance.interceptors.request.use(\n    config => {\n\t\tlet jwtToken = store.getters.GET_JWT_TOKEN; \n\t\tconsole.log(\"interceptor\")\n\t\tconsole.log(jwtToken);\n\t\tlocalStorage.getItem('jwtToken');\n        if (jwtToken !== null) {\n\t\t\tconfig.headers.common['X-AUTH-TOKEN'] = jwtToken;\n\t\t\tconsole.log(\"헤더설정\")\n        }\n         console.log('Interceptors Request is', config, new Date());\n        return config\n    },\n    error => {\n         console.log('Interceptors Request Error is', error.response, new Date());\n        return Promise.reject(error);\n    }\n);\n\n\ninstance.interceptors.response.use(\n   response => {\n\t    console.log('Interceptors Response is ', response, new Date());\n\t \n\t\treturn response;\n   },\n   function (error) {\n\t    console.log('Interceptors Response Error is ', error.response, new Date());\n\n\t   if (!error.response) {\n\t\t\n\t\t   store.commit('NETWORK_ERROR')\n\t\t   return Promise.reject(error);\n\t   }\n\n\t   let status = error.response.status;\n\t   if (status === 500) {\n\t\t   store.commit('PUSH_ERROR_PAGE');\n\t\t   return Promise.reject(error);\n\t   }\n\n\t   if (status === 401) {\n\t\t   let errorData = error.response.data;\n\t\t   if (errorData.error !== 'invalid_token') {\n\t\t\t   return Promise.reject(error);\n\t\t   }\n\n\t\t   if (isExpiredToken(errorData)) {\n\t\t\t   return attemptRefreshToken();\n\t\t   } else {\n\t\t\t   store.commit('LOGOUT_WITH_TOKEN_INVALIDE');\n\t\t\t   store.commit('SET_SNACKBAR', setSnackBarInfo('토큰 정보가 잘못되었습니다. 다시 로그인 해주세요', 'error', 'top'));\n\t\t   }\n\t   }\n\n\t   return Promise.reject(error);\n   }\n);\n\n\nexport default instance;"]}]}