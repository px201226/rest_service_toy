{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\user.js","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\user.js","mtime":1610690635497},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvTGVlLUdpLVN1L0lkZWFQcm9qZWN0cy9yZXN0YXBpL3NwcmluZ2Jvb3RfYm9hcmRfd2l0aF92dWVqcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBzdG9yZSBmcm9tICcuJzsKaW1wb3J0IHsgbG9nb3V0LCBnZXRPQXV0aFRva2VuLCBqb2luLCBnZXRVc2VyIH0gZnJvbSAiLi4vYXBpL3VzZXJfYXBpIjsKaW1wb3J0IHsgc2V0VG9rZW5JbkxvY2FsU3RvcmFnZSB9IGZyb20gIi4vdG9rZW4iOwppbXBvcnQgeyBzZXRTbmFja0JhckluZm8gfSBmcm9tICIuLi9hcGkvY29tbW9uX2FwaSI7CmltcG9ydCByb3V0ZXIgZnJvbSAiLi4vcm91dGVyIjsgLy8gc3RhdGUKCnZhciBzdGF0ZSA9IHsKICBqd3RUb2tlbjogIiIsCiAgdXNlcjogIiIsCiAgbG9naW46IGZhbHNlCn07IC8vIGdldHRlcnMKCnZhciBnZXR0ZXJzID0gewogIEdFVF9JU19MT0dJTjogZnVuY3Rpb24gR0VUX0lTX0xPR0lOKHN0YXRlKSB7CiAgICByZXR1cm4gISFzdGF0ZS5qd3RUb2tlbjsKICB9LAogIEdFVF9KV1RfVE9LRU46IGZ1bmN0aW9uIEdFVF9KV1RfVE9LRU4oc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5qd3RUb2tlbjsKICB9LAogIEdFVF9VU0VSOiBmdW5jdGlvbiBHRVRfVVNFUihzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnVzZXI7CiAgfQp9OyAvLyBtdXRhdGlvbnMKCnZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX1VTRVI6IGZ1bmN0aW9uIFNFVF9VU0VSKHN0YXRlLCB1c2VyKSB7CiAgICBzdGF0ZS51c2VyID0gdXNlcjsKICB9LAogIFNFVF9MT0dPVVQ6IGZ1bmN0aW9uIFNFVF9MT0dPVVQoc3RhdGUpIHsKICAgIHN0YXRlLnVzZXIgPSAiIjsKICB9LAogIFNFVF9KV1RUT0tFTjogZnVuY3Rpb24gU0VUX0pXVFRPS0VOKHN0YXRlLCB0b2tlbikgewogICAgc3RhdGUuand0VG9rZW4gPSB0b2tlbjsKICB9Cn07IC8vIGFjdGlvbnMKCnZhciBhY3Rpb25zID0gewogIC8vIO2ajOybkOqwgOyehQogIFFVRVJZX0pPSU46IGZ1bmN0aW9uIFFVRVJZX0pPSU4oY29udGV4dCwgcmVxKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnU1RBUlRfTE9BRElORycpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBqb2luKHJlcSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJvdXRlci5wdXNoKCIvbG9naW4iKTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnT1BFTl9TTkFDS0JBUicsIHNldFNuYWNrQmFySW5mbygn7ZqM7JuQ6rCA7J6F7J20IOyZhOujjOuQmOyXiOyKteuLiOuLpC4nLCAnc3VjY2VzcycsICd0b3AnKSk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA5OwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ09QRU5fTU9EQUwnLCB7CiAgICAgICAgICAgICAgICB0aXRsZTogJ+yXkOufrCcsCiAgICAgICAgICAgICAgICBjb250ZW50OiBfY29udGV4dC50MC5yZXNwb25zZS5kYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICBvcHRpb24xOiAn64ur6riwJwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA5XV0pOwogICAgfSkpKCk7CiAgfSwKICAvLyDroZzqt7jsnbgKICBRVUVSWV9MT0dJTjogZnVuY3Rpb24gUVVFUllfTE9HSU4oY29udGV4dCwgcmVxKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHJlc3BvbnNlLCByZXNwb25zZTE7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCdTVEFSVF9MT0FESU5HJyk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBnZXRPQXV0aFRva2VuKHJlcSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICByb3V0ZXIuYmFjaygpOyAvL0pXVCDthqDtgbAg7ISk7KCVCgogICAgICAgICAgICAgIHNldFRva2VuSW5Mb2NhbFN0b3JhZ2UocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ1NFVF9KV1RUT0tFTicsIHJlc3BvbnNlLmRhdGEpOyAvLyBVU0VSIFBST0ZJTEUg7ISk7KCVCgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgcmV0dXJuIGdldFVzZXIoKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgcmVzcG9uc2UxID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoJ1NFVF9VU0VSJywgcmVzcG9uc2UxLmRhdGEpOyAvLyBNYXRjaGluZyDssLjqsIAg7Jes67aAIO2ZleyduAoKICAgICAgICAgICAgICBpZiAocmVzcG9uc2UxLmRhdGEubGFzdE1hdGNoaW5nRGF0ZSkgY29udGV4dC5jb21taXQoIlNFVF9JU19BUFBMSUVEIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmp3dFRva2VuKTsKCiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxNjsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQyLnQwKTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgnT1BFTl9NT0RBTCcsIHsKICAgICAgICAgICAgICAgIHRpdGxlOiAn7JeQ65+sJywKICAgICAgICAgICAgICAgIGNvbnRlbnQ6IF9jb250ZXh0Mi50MC5yZXNwb25zZS5kYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICBvcHRpb24xOiAn64ur6riwJwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDE2XV0pOwogICAgfSkpKCk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9Ow=="},{"version":3,"sources":["C:/Users/Lee-Gi-Su/IdeaProjects/restapi/springboot_board_with_vuejs/src/store/user.js"],"names":["store","logout","getOAuthToken","join","getUser","setTokenInLocalStorage","setSnackBarInfo","router","state","jwtToken","user","login","getters","GET_IS_LOGIN","GET_JWT_TOKEN","GET_USER","mutations","SET_USER","SET_LOGOUT","SET_JWTTOKEN","token","actions","QUERY_JOIN","context","req","commit","response","push","title","content","data","message","option1","QUERY_LOGIN","back","response1","lastMatchingDate","console","log"],"mappings":"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","sourcesContent":["import store from '.';\r\nimport {logout, getOAuthToken, join, getUser } from \"../api/user_api\";\r\nimport {setTokenInLocalStorage} from \"./token\"\r\nimport {setSnackBarInfo} from \"../api/common_api\"\r\nimport router from \"../router\";\r\n\r\n// state\r\nconst state = {\r\n  jwtToken:\"\",\r\n  user : \"\",\r\n  login:false\r\n};\r\n\r\n// getters\r\nconst getters = {\r\n \r\n  GET_IS_LOGIN(state) {\r\n    return !!state.jwtToken;\r\n  },\r\n  GET_JWT_TOKEN(state){\r\n    return state.jwtToken;\r\n  },\r\n\r\n  GET_USER(state){\r\n    return state.user\r\n  }\r\n\r\n  \r\n};\r\n\r\n// mutations\r\nconst mutations = {\r\n  SET_USER(state,user){\r\n    state.user = user;\r\n  },\r\n  SET_LOGOUT(state){\r\n    state.user=\"\"\r\n  },\r\n  SET_JWTTOKEN(state,token){\r\n    state.jwtToken = token;\r\n  },\r\n};\r\n\r\n// actions\r\nconst actions = {\r\n  \r\n  // 회원가입\r\n  async QUERY_JOIN(context, req) {\r\n    try {\r\n      context.commit('START_LOADING')\r\n      const response = await join(req);\r\n      router.push(\"/login\")\r\n      context.commit('OPEN_SNACKBAR', setSnackBarInfo('회원가입이 완료되었습니다.', 'success', 'top'))\r\n    } catch (e) {\r\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.data.message, option1: '닫기',});\r\n    } \r\n  },\r\n\r\n  // 로그인\r\n  async QUERY_LOGIN(context, req) {\r\n    try {\r\n      context.commit('START_LOADING')\r\n      const response = await getOAuthToken(req);\r\n      router.back()\r\n\r\n      //JWT 토큰 설정\r\n      setTokenInLocalStorage(response.data);\r\n      context.commit('SET_JWTTOKEN',response.data );\r\n  \r\n      // USER PROFILE 설정\r\n      const response1 = await getUser();\r\n      context.commit('SET_USER',response1.data)\r\n      \r\n      // Matching 참가 여부 확인\r\n      if(response1.data.lastMatchingDate)\r\n      context.commit(\"SET_IS_APPLIED\", true);\r\n\r\n      return response.jwtToken;\r\n    } catch (e) {\r\n      console.log(e);\r\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.data.message, option1: '닫기',});\r\n    }\r\n  },\r\n};\r\n\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"]}]}