{"remainingRequest":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\user.js","dependencies":[{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\src\\store\\user.js","mtime":1611066413854},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lee-Gi-Su\\IdeaProjects\\restapi\\springboot_board_with_vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Lee-Gi-Su/IdeaProjects/restapi/springboot_board_with_vuejs/src/store/user.js"],"names":["store","logout","getOAuthToken","join","getUser","getPostList","getCommentList","setTokenInLocalStorage","deleteToken","setSnackBarInfo","router","state","token","localStorage","getItem","user","login","getters","GET_IS_LOGIN","GET_TOKEN","GET_USER","mutations","SET_USER","SET_LOGOUT","SET_TOKEN","LOGOUT","commit","push","actions","QUERY_JOIN","context","req","response","title","content","data","message","option1","QUERY_LOGIN","response1","lastMatchingDate","jwtToken","console","log","QUERY_GET_USER_POST_LIST","QUERY_GET_USER_COMMENT_LIST"],"mappings":"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","sourcesContent":["import store from '.';\r\nimport {logout, getOAuthToken, join, getUser, getPostList, getCommentList } from \"../api/user_api\";\r\nimport {setTokenInLocalStorage,deleteToken} from \"./token\"\r\nimport {setSnackBarInfo} from \"../api/common_api\"\r\nimport router from \"../router\";\r\n\r\n// state\r\nconst state = {\r\n  token: localStorage.getItem('access_token'),\r\n  user : \"\",\r\n  login:false\r\n};\r\n\r\n// getters\r\nconst getters = {\r\n \r\n  GET_IS_LOGIN(state) {\r\n    return !!state.token;\r\n  },\r\n  GET_TOKEN(state){\r\n    return state.token;\r\n  },\r\n\r\n  GET_USER(state){\r\n    return state.user\r\n  }\r\n\r\n  \r\n};\r\n\r\n// mutations\r\nconst mutations = {\r\n  SET_USER(state,user){\r\n    state.user = user;\r\n  },\r\n  SET_LOGOUT(state){\r\n    state.user=\"\"\r\n  },\r\n  SET_TOKEN(state,token){\r\n    state.token = token;\r\n  },\r\n  LOGOUT(state) {\r\n    deleteToken();\r\n    state.user = \"\";\r\n    state.token = \"\";\r\n    this.commit('OPEN_SNACKBAR', setSnackBarInfo('로그아웃 완료', 'success', 'top'));\r\n    router.push(\"/\");\r\n  },\r\n};\r\n\r\n// actions\r\nconst actions = {\r\n  \r\n  // 회원가입\r\n  async QUERY_JOIN(context, req) {\r\n    try {\r\n      context.commit('START_LOADING')\r\n      const response = await join(req);\r\n      router.push(\"/login\")\r\n      context.commit('OPEN_SNACKBAR', setSnackBarInfo('회원가입이 완료되었습니다.', 'success', 'top'))\r\n    } catch (e) {\r\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.data.message, option1: '닫기',});\r\n    } \r\n  },\r\n\r\n  // 로그인\r\n  async QUERY_LOGIN(context, req) {\r\n    try {\r\n      context.commit('START_LOADING')\r\n      const response = await getOAuthToken(req);\r\n\r\n      //JWT 토큰 설정\r\n      setTokenInLocalStorage(response.data);\r\n      context.commit('SET_TOKEN',response.data );\r\n  \r\n      // USER PROFILE 설정\r\n      const response1 = await getUser();\r\n      context.commit('SET_USER',response1.data)\r\n      \r\n      // Matching 참가 여부 확인\r\n      if(response1.data.lastMatchingDate)\r\n      context.commit(\"SET_IS_APPLIED\", true);\r\n\r\n      return response.jwtToken;\r\n    } catch (e) {\r\n      console.log(e);\r\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.data.message, option1: '닫기',});\r\n    }\r\n  },\r\n  // 회원가입\r\n  async QUERY_GET_USER_POST_LIST(context) {\r\n    try {\r\n      context.commit('START_LOADING')\r\n      const response = await getPostList;\r\n      return response;\r\n    } catch (e) {\r\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.data.message, option1: '닫기',});\r\n    } \r\n  },\r\n\r\n  // 회원가입\r\n  async QUERY_GET_USER_COMMENT_LIST(context, req) {\r\n    try {\r\n      context.commit('START_LOADING')\r\n      const response = await getCommentList;\r\n      return response;\r\n    } catch (e) {\r\n      context.commit('OPEN_MODAL', {title: '에러', content: e.response.data.message, option1: '닫기',});\r\n    } \r\n  },\r\n};\r\n\r\n\r\nexport default {\r\n  state,\r\n  mutations,\r\n  actions,\r\n  getters,\r\n};\r\n"]}]}